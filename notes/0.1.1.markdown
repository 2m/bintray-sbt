## enhancements

- added `bintrayOrganization` key for optionally publishing to a bintray organization rather than a user account

You can set this in your build definition with

    bintray.Keys.bintrayOrganization in bintray.Keys.bintray := Some("strength-in-numbers")
    
- publishing sbt plugins to bintray is now possible

In your plugin's build definition, add the following

    sbtPlugin := true
   
    seq(bintraySettings:_*)   

That's it!

Be sure to document the following requirement for consumers of your plugins to include the following resolver. This only needs appended once.

    resolvers += Resolver.url(
      "bintray-sbt-plugin-releases",
      url("http://dl.bintray.com/content/sbt/sbt-plugin-releases"))(
        Resolver.ivyStylePatterns)

- Unpublishing is now possible. It's generally a bad practice to remove version of a library others may depend on but sometimes you may want test a release with the ability to immediately take it back down if something goes south.

You can now do this with the `unpublish` task

    bintray::unpublish
